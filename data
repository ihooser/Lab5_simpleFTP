Minute paper one:
	In the first lecture of the semester, the most significant thing that I learned was the doubling of the price and the size of devices. This is huge because the smaller the size of the transistor or of the other devices the smaller the entire product will be. The decrease of the price of the devices are also very important for all of the consumers buying it. A good example of this is the personal computer. It originally started out as the size of a room. Now it is much faster, it holds more information and it fits into the palm of a hand. Because more and more people have a computer or a phone this has also increased the amount of IP traffic that is used. As you stated in class the IP traffic will continue to grow by 3X over the next 5 years.
	The biggest question on my mind is, how far can we, as humans, push the limit of how fast and small we can make the devices? Eventually transistors, capacitors, and other element will hit a wall of how small that they can get. This will also be true to the fact that we will only get so far on how fast we can get our devices to go. You did talk about the expectation of how fast a device should work, but what will our expectations change to in the future?

Minute paper two:
	This lecture taught me a lot about how encrypted information is sent. I had no idea how this worked before this lecture. I can see how the importance of having encrypted information being sent. The military needs to be able to do this to keep what they are doing safe and also they need to keep locations and personal safe. If it was easy to intercept information then a lot of bad things can happen. The way that the encryption happens is also very important. If it is believed that the encryption isn’t good enough then you can always add another key and another encryption. This lecture was also the first time that I had heard about DES encrypting. It has a lot of levels for protections and there is no known back door. Another thing that was important in this lecture was that the sampling frequency needs to be twice the frequency that is being sampled.
	The biggest question on my mind right now is the fact that the key to decode the cipher sent through a secured line. How is that line secured? Is it sent through another cipher and has a different key, or is there another special way that this key is sent to the receiving end.

Minute Paper three:
	The lecture today was about the different switching. The first kind is circuit switching. This type is sending out a large continuous stream of data. This only happens after the connection is made. It was originally used with the old phones. There needed to be a direct connection between the two lines for the data to transfer. If they hadn’t connected yet then a busy signal was sent back.  One of the big downfalls of this is the fact that there needed to be a lot of lines strung to connect the different lines. The next kind of switching is message switching. This is similar to circuit except you can send out the data with a computer. Circuit switching is not able to be sent by data. A big difference between the two is that the message is muxed and the circuit is not. By muxing the routing the lines then you can use less transmission lines. This however has the downside that you need to wait for someone else’s message to be sent first, then you will be able to send the message that you want.  The last type is packet switching this takes the message and breaks it down into pieces. Then the pieces are sent out individually through whatever path they want until they reach their destination. Here they are put back together and used. In packet switching there are also two kinds. The first is virtual circuit. This type will hold the data pieces at the end until all have arrived. Then they will display them in the order that they were originally sent. It ends up looking like the circuit switching. The other kind is datagram. With this the data is used as soon as it arrives at the final destination. It will most likely be out of order, but it will start being used faster because you don’t need to wait till all of the data is at the destination.
	The biggest question on my mind is, how much data needs to be sent multiple times in order for the end to get all of the data? I know that some of the data will be lost along the way.

